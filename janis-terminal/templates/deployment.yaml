apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "janisterminal.fullname" . }}
  labels:
    {{- include "janisterminal.labels" . | nindent 4 }}
  annotations:
    authproxy.stakater.com/enabled: "true"
    authproxy.stakater.com/source-service-name: {{ .Release.Name }}-service
    authproxy.stakater.com/upstream-url: "http://localhost:7681/"
    authproxy.stakater.com/client-id: {{ .Values.oidc.client_id }}
    authproxy.stakater.com/client-secret: {{ .Values.oidc.client_secret }}
    authproxy.stakater.com/listen: ":80"
    authproxy.stakater.com/discovery-url: {{ tpl .Values.oidc.discovery_url . }}
    authproxy.stakater.com/oauth-uri: "{{ index (index .Values.ingress.hosts 0).paths 0 }}/oauth"
    # authproxy.stakater.com/verbose: "true"
    authproxy.stakater.com/gatekeeper-image: keycloak/keycloak-gatekeeper:7.0.0
{{- with .Values.annotations }}
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "janisterminal.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "janisterminal.selectorLabels" . | nindent 8 }}
      annotations:
        {{- with .Values.podAnnotations -}}
        {{ toYaml . | nindent 8 }}
        {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "janisterminal.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          command: ['ttyd', '--base-path', '{{ index (index .Values.ingress.hosts 0).paths 0 }}', 'bash']
          workingDir: {{ .Values.persistence.mountPath }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ index (index .Values.ingress.hosts 0).paths 0 }}/
              port: 80
          readinessProbe:
            httpGet:
              path: {{ index (index .Values.ingress.hosts 0).paths 0 }}/
              port: 80
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: janisterminal-data
              mountPath: {{ .Values.persistence.mountPath }}
              subPath: janis
            {{- if .Values.extraVolumeMounts }}
            {{- .Values.extraVolumeMounts | toYaml | nindent 12 }}
            {{- end }}
      volumes:
        - name: janisterminal-data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ template "janisterminal.pvcname" . }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- if .Values.extraVolumes }}
        {{- .Values.extraVolumes | toYaml | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
